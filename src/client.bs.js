// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Printf = require("bs-platform/lib/js/printf.js");
var ApolloLinks = require("reason-apollo/src/ApolloLinks.bs.js");
var ApolloBoost = require("apollo-boost");
var OnegraphAuth = require("onegraph-auth");
var ApolloInMemoryCache = require("reason-apollo/src/ApolloInMemoryCache.bs.js");
var Config$ReactTemplate = require("./config.bs.js");

function logout() {
  return /* () */0;
}

var uri = Curry._1(Printf.sprintf(/* Format */[
          /* String_literal */Block.__(11, [
              "http://serve.onegraph.com/dynamic?app_id=",
              /* String */Block.__(2, [
                  /* No_padding */0,
                  /* End_of_format */0
                ])
            ]),
          "http://serve.onegraph.com/dynamic?app_id=%s"
        ]), Config$ReactTemplate.appId);

var _httpLink = ApolloLinks.createHttpLink(uri, undefined, undefined, undefined, "include", undefined, /* () */0);

function contextHandler() {
  return {
          headers: {
            show_beta_schema: "true"
          }
        };
}

var authLink = ApolloLinks.createContextLink(contextHandler);

var _inMemoryCache = ApolloInMemoryCache.createInMemoryCache((function (obj) {
        if (obj.__typename === "Organization") {
          return obj.key;
        } else {
          return obj.id;
        }
      }), undefined, /* () */0);

var inMemoryCache = ApolloInMemoryCache.createInMemoryCache(undefined, undefined, /* () */0);

var httpLink = ApolloLinks.createHttpLink(uri, undefined, undefined, undefined, "include", undefined, /* () */0);

var auth = new OnegraphAuth.default({
      appId: Config$ReactTemplate.appId,
      oauthFinishPath: "/src/popup.html"
    });

var instance = new ApolloBoost.default({
      uri: "https://serve.onegraph.com/dynamic?app_id=" + Config$ReactTemplate.appId,
      request: (function (operation) {
          return operation.setContext({
                      headers: auth.authHeaders()
                    });
        })
    });

exports.logout = logout;
exports.uri = uri;
exports._httpLink = _httpLink;
exports.contextHandler = contextHandler;
exports.authLink = authLink;
exports._inMemoryCache = _inMemoryCache;
exports.inMemoryCache = inMemoryCache;
exports.httpLink = httpLink;
exports.auth = auth;
exports.instance = instance;
/* uri Not a pure module */
